---
title: "Assignment 1: Census Data Quality for Policy Decisions"
subtitle: "Evaluating Data Reliability for Algorithmic Decision-Making"
author: "Ye Zhang"
date: 9.28.2025
format: 
  html:
    code-fold: false
    toc: true
    toc-location: left
    theme: cosmo
execute:
  warning: false
  message: false
---

# Assignment Overview

## Scenario

You are a data analyst for the **[Your State] Department of Human Services**. The department is considering implementing an algorithmic system to identify communities that should receive priority for social service funding and outreach programs. Your supervisor has asked you to evaluate the quality and reliability of available census data to inform this decision.

Drawing on our Week 2 discussion of algorithmic bias, you need to assess not just what the data shows, but how reliable it is and what communities might be affected by data quality issues.

## Learning Objectives

- Apply dplyr functions to real census data for policy analysis
- Evaluate data quality using margins of error 
- Connect technical analysis to algorithmic decision-making
- Identify potential equity implications of data reliability issues
- Create professional documentation for policy stakeholders

## Submission Instructions

**Submit by posting your updated portfolio link on Canvas.** Your assignment should be accessible at `your-portfolio-url/assignments/assignment_1/`

Make sure to update your `_quarto.yml` navigation to include this assignment under an "Assignments" menu.

# Part 1: Portfolio Integration

Create this assignment in your portfolio repository under an `assignments/assignment_1/` folder structure. Update your navigation menu to include:

```
- text: Assignments
  menu:
    - href: assignments/assignment_1/your_file_name.qmd
      text: "Assignment 1: Census Data Exploration"
```
If there is a special character like comma, you need use double quote mark so that the quarto can identify this as text

# Setup

```{r setup}
# Load required packages (hint: you need tidycensus, tidyverse, and knitr)

library(tidyverse)
library(tidycensus)
library(scales)
library(RColorBrewer)

# Set your Census API key

census_api_key(Sys.getenv("138db656646183a18ae51e4a7c1e1f5cd64d4b40"))
install = TRUE

# Choose your state for analysis - assign it to a variable called my_state

my_state <- "CA"

```

**State Selection:** I have chosen **[California]** for this analysis because: I spent my last four years in California. It is the most memorable for my entire life. I miss my friends and family back in California. 

# Part 2: County-Level Resource Assessment

## 2.1 Data Retrieval

**Your Task:** Use `get_acs()` to retrieve county-level data for your chosen state.

**Requirements:**
- Geography: county level
- Variables: median household income (B19013_001) and total population (B01003_001)  
- Year: 2022
- Survey: acs5
- Output format: wide

**Hint:** Remember to give your variables descriptive names using the `variables = c(name = "code")` syntax.

```{r county-data}
# Write your get_acs() code here

county_data <- get_acs(
  geography = "county",
  variables = c(
    median_income = "B19013_001",  
    total_pop = "B01003_001"    
  ),
  state = my_state,
  year = 2022,
  output = "wide"
)

# Clean the county names to remove state name and "County" 
# Hint: use mutate() with str_remove()

county_data <- county_data %>%
  mutate(NAME = str_remove(NAME, " County, California"))

# Display the first few rows
head(county_data)


```

## 2.2 Data Quality Assessment

**Your Task:** Calculate margin of error percentages and create reliability categories.

**Requirements:**
- Calculate MOE percentage: (margin of error / estimate) * 100
- Create reliability categories:
  - High Confidence: MOE < 5%
  - Moderate Confidence: MOE 5-10%  
  - Low Confidence: MOE > 10%
- Create a flag for unreliable estimates (MOE > 10%)

**Hint:** Use `mutate()` with `case_when()` for the categories.

```{r income-reliability}
# Calculate MOE percentage and reliability categories using mutate()

county_data <- county_data %>%
  mutate(
    income_moe_pct = (median_incomeM / median_incomeE) * 100,
     reliability_category = case_when(
      income_moe_pct < 5 ~ "High Confidence",
      income_moe_pct <= 10 ~ "Moderate Confidence",
      TRUE ~ "Low Confidence"),
        unreliable_flag = income_moe_pct > 10)

# Create a summary showing count of counties in each reliability category
# Hint: use count() and mutate() to add percentages

reliability_summary <- county_data %>%
  count(reliability_category) %>%
  mutate(
    percentage = round(n / sum(n) * 100, 1)
  )

```

## 2.3 High Uncertainty Counties

**Your Task:** Identify the 5 counties with the highest MOE percentages.

**Requirements:**
- Sort by MOE percentage (highest first)
- Select the top 5 counties
- Display: county name, median income, margin of error, MOE percentage, reliability category
- Format as a professional table using `kable()`

**Hint:** Use `arrange()`, `slice()`, and `select()` functions.

```{r high-uncertainty}
# Create table of top 5 counties by MOE percentage

high_uncertainty_table <- county_data %>%
  arrange(desc(income_moe_pct)) %>%  
  slice_head(n = 5) %>% 
  select(NAME, median_incomeE, median_incomeM, income_moe_pct, reliability_category)

# Format as table with kable() - include appropriate column names and caption

library(knitr)
library(kableExtra)

high_uncertainty_table %>%
  kable(
    col.names = c("County", "Median Income", "Margin of Error", "MOE (%)", "Reliability"),
    caption = "Top 5 California Counties with Highest Income Uncertainty",
    format.args = list(big.mark = ","),
    digits = c(0, 0, 0, 1, 0) 
  ) %>%
  kable_styling(bootstrap_options = c("striped", "hover"))

```

**Data Quality Commentary:**

[Counties that have higher margin of error will have unreliable income estimates and could lead to misleading policy plan and resource allocation. The high margin of error could because these are counties that have low population and the data could easily skewed.]

# Part 3: Neighborhood-Level Analysis

## 3.1 Focus Area Selection

**Your Task:** Select 2-3 counties from your reliability analysis for detailed tract-level study.

**Strategy:** Choose counties that represent different reliability levels (e.g., 1 high confidence, 1 moderate, 1 low confidence) to compare how data quality varies.

```{r select-counties}
# Use filter() to select 2-3 counties from your county_reliability data
# Store the selected counties in a variable called selected_counties

selected_counties <- county_data %>%
  filter(NAME %in% c("Los Angeles", "Trinity", "Tehama")) %>%
  select(NAME, median_incomeE, income_moe_pct, reliability_category)

# Display the selected counties with their key characteristics
# Show: county name, median income, MOE percentage, reliability category

print(selected_counties)

```

**Comment on the output:** [Los Angeles has a High Confidence category because of its extremely low income margin of error percent. This is because Los Angeles is one of the most populated county and that lead to low margin of error. On the another other hand, Tehama has a income margin of error percentage around 7 and Trinity is at 12. The data for Tehama and Trinity are less reliable compare to Los Angeles County.]

## 3.2 Tract-Level Demographics

**Your Task:** Get demographic data for census tracts in your selected counties.

**Requirements:**
- Geography: tract level
- Variables: white alone (B03002_003), Black/African American (B03002_004), Hispanic/Latino (B03002_012), total population (B03002_001)
- Use the same state and year as before
- Output format: wide
- **Challenge:** You'll need county codes, not names. Look at the GEOID patterns in your county data for hints.

```{r tract-demographics}
# Define your race/ethnicity variables with descriptive names

race_vars <- c(
  total_pop = "B03002_001",
  white_alone = "B03002_003",
  black_alone = "B03002_004",
  hispanic = "B03002_012"
)

# Use get_acs() to retrieve tract-level data
# Hint: You may need to specify county codes in the county parameter

tract_demographics <- get_acs(
  geography = "tract",
  variables = race_vars,
  state = my_state,
  county = c("037", "105", "103"),
  year = 2022,
  output = "wide"
)

# Calculate percentage of each group using mutate()
# Create percentages for white, Black, and Hispanic populations

tract_demographics <- tract_demographics %>%
  mutate(
    white_pct = (white_aloneE / total_popE) * 100,
    black_pct = (black_aloneE / total_popE) * 100,
    hispanic_pct = (hispanicE / total_popE) * 100
  )

# Add readable tract and county name columns using str_extract() or similar

tract_demographics <- tract_demographics %>%
  mutate(
    census_tract = str_remove(NAME, ";.*"),
    county = str_remove(NAME, "Census Tract [0-9.]+; ") %>%
             str_remove("; California") %>%
             str_remove(" County")
  )

```

## 3.3 Demographic Analysis

**Your Task:** Analyze the demographic patterns in your selected areas.

```{r demographic-analysis}
# Find the tract with the highest percentage of Hispanic/Latino residents
# Hint: use arrange() and slice() to get the top tract

highest_hispanic <- tract_demographics %>%
  arrange(desc(hispanic_pct)) %>%
  slice_head(n = 1) %>%
  select(census_tract, county, hispanic_pct)

# Calculate average demographics by county using group_by() and summarize()
# Show: number of tracts, average percentage for each racial/ethnic group

county_demographics <- tract_demographics %>%
  group_by(county) %>%
  summarize(
    num_tracts = n(),
    avg_white_pct = mean(white_pct, na.rm = TRUE),
    avg_black_pct = mean(black_pct, na.rm = TRUE),
    avg_hispanic_pct = mean(hispanic_pct, na.rm = TRUE)
  )

# Create a nicely formatted table of your results using kable()

library(knitr)          
county_demographics %>%
  kable(
    col.names = c("County", "Number of Tracts", "Avg White %", "Avg Black %", "Avg Hispanic %"), 
    caption = "Average Demographics by County",  
    digits = 1           
  )

```

# Part 4: Comprehensive Data Quality Evaluation

## 4.1 MOE Analysis for Demographic Variables

**Your Task:** Examine margins of error for demographic variables to see if some communities have less reliable data.

**Requirements:**
- Calculate MOE percentages for each demographic variable
- Flag tracts where any demographic variable has MOE > 15%
- Create summary statistics

```{r demographic-moe}
# Calculate MOE percentages for white, Black, and Hispanic variables
# Hint: use the same formula as before (margin/estimate * 100)

tract_demographics <- tract_demographics %>%
  mutate(
    white_moe_pct = (white_aloneM / white_aloneE) * 100,
    black_moe_pct = (black_aloneM / black_aloneE) * 100,
    hispanic_moe_pct = (hispanicM / hispanicE) * 100,
    high_moe_flag = ifelse(white_moe_pct > 15 | black_moe_pct > 15 | hispanic_moe_pct > 15, TRUE, FALSE)
  )

# Create a flag for tracts with high MOE on any demographic variable
# Use logical operators (| for OR) in an ifelse() statement

# Create summary statistics showing how many tracts have data quality issues

moe_summary <- tract_demographics %>%
  summarize(
    total_tracts = n(),
    tracts_with_issues = sum(high_moe_flag, na.rm = TRUE),
    pct_with_issues = round(sum(high_moe_flag, na.rm = TRUE) / n() * 100, 1)
  )

moe_summary

```

## 4.2 Pattern Analysis

**Your Task:** Investigate whether data quality problems are randomly distributed or concentrated in certain types of communities.

```{r pattern-analysis}
# Group tracts by whether they have high MOE issues
# Calculate average characteristics for each group:
# - population size, demographic percentages

pattern_comparison <- tract_demographics %>%
  group_by(high_moe_flag) %>%
  summarize(
    num_tracts = n(),
    avg_population = mean(total_popE, na.rm = TRUE),
    avg_pct_white = mean(white_pct, na.rm = TRUE),
    avg_pct_black = mean(black_pct, na.rm = TRUE),
    avg_pct_hispanic = mean(hispanic_pct, na.rm = TRUE)
  )

# Use group_by() and summarize() to create this comparison
# Create a professional table showing the patterns

library(knitr)
pattern_comparison %>%
  kable(
    col.names = c("High MOE Issues", "Number of Tracts", "Avg Population", 
                  "Avg White% ", "Avg Black %", "Avg Hispanic %"),
    caption = "Comparison of Tract Characteristics by Data Quality",
    digits = c(0, 0, 0, 1, 1, 1)
  )

```

**Pattern Analysis:** [It is crazy that almost all of the data are not reliable. The estimate for racial group is not reliable on the census tract level through their high margin of error. I think this might further stress the point of how sampling population is critical in doing analysis. The average population for all the HIGH MOE Issues tracts is at 3980. The only one tract without HIGH MOE Issue has a population 0f 8994.]


# Part 5: Policy Recommendations

## 5.1 Analysis Integration and Professional Summary

**Your Task:** Write an executive summary that integrates findings from all four analyses.

**Executive Summary Requirements:**
1. **Overall Pattern Identification**: What are the systematic patterns across all your analyses?
2. **Equity Assessment**: Which communities face the greatest risk of algorithmic bias based on your findings?
3. **Root Cause Analysis**: What underlying factors drive both data quality issues and bias risk?
4. **Strategic Recommendations**: What should the Department implement to address these systematic issues?

**Executive Summary:**

[I think the most important takeaway from this assignment is the important of sampling size. This situation has appear in multiple analysis and multple times. If a data has some reliability issue, one of the characteristic of that data is the small sampling size.

The community that faced the greatest risk of algorithmic bias is Trinity. Trinity only has 4 census tract and it such a small county that the data could highly likely to be skewed because of sampling error. It is also show as a "Low Confidence" in county level income data. The interpretation and result could be really not reliable due to data quality issue.

The root cause may be the survey design and also just how insufficient for the data to be reliable if we want to look at small geographic areas like census tracts. Rural places like Trinity and Tehama make reliable sampling really challenging. 

I think one of the most important is to apply strict MOE thresholds. Data that are not reliable especially on small sample and big geographic area it is really important to examine the data closely. Aggregate the data and looking at large scale is necessary if the public organization want to implement any policies. Careful decision making process is necessary and key for community success. ]

## 6.3 Specific Recommendations

**Your Task:** Create a decision framework for algorithm implementation.

```{r recommendations-data}
# Create a summary table using your county reliability data
# Include: county name, median income, MOE percentage, reliability category

decision_framework <- county_data %>%
  select(NAME, median_incomeE, income_moe_pct, reliability_category) %>%
  mutate(
    algorithm_recommendation = case_when(
      reliability_category == "High Confidence" ~ "Safe for algorithmic decisions",
      reliability_category == "Moderate Confidence" ~ "Use with caution - monitor outcomes",
      reliability_category == "Low Confidence" ~ "Requires manual review or additional data"
    )
  )

# Add a new column with algorithm recommendations using case_when():
# - High Confidence: "Safe for algorithmic decisions"
# - Moderate Confidence: "Use with caution - monitor outcomes"  
# - Low Confidence: "Requires manual review or additional data"

# Format as a professional table with kable()

library(knitr)
library(kableExtra)

decision_framework %>%
  kable(
    col.names = c("County", "Median Income", "MOE %", "Reliability", "Algorithm Recommendation"),
    caption = "Decision Framework for Algorithm Implementation by County",
    format.args = list(big.mark = ","),
    digits = c(0, 0, 1, 0, 0)
  ) %>%
  kable_styling(bootstrap_options = c("striped", "hover"))

```

**Key Recommendations:**

**Your Task:** Use your analysis results to provide specific guidance to the department.

```{r}
high_confidence <- decision_framework %>%
  filter(reliability_category == "High Confidence") %>%
  select(NAME)

moderate_confidence <- decision_framework %>%
  filter(reliability_category == "Moderate Confidence") %>%
  select(NAME)

low_confidence <- decision_framework %>%
  filter(reliability_category == "Low Confidence") %>%
  select(NAME)

print("High Confidence Counties:")
print(high_confidence)

print("Moderate Confidence Counties:")
print(moderate_confidence)

print("Low Confidence Counties:")
print(low_confidence)
```


1. **Counties suitable for immediate algorithmic implementation:** [The counties that are suitabale for immediate algorithmic implementation are Alameda, Butte, Calaveras, Contra Costa, El Dorado, Fresno, Humboldt, Imperial, Kern, Kings, Lake, Los Angeles, Madera, Marin, Mendocino, Merced, Monterey, Napa, Nevada, Orange, Placer, Riverside, Sacramento, San Bernardino, San Diego, San Francisco, San Joaquin, San Luis Obispo, San Mateo, Santa Barbara, Santa Clara, Santa Cruz, Shasta, Siskiyou, Solano, Sonoma, Stanislaus, Sutter, Tulare, Ventura, Yolo, Yuba. These county are in the high confidence category for the new decision making framework.]

2. **Counties requiring additional oversight:** [Counties need additional oversight are Amador, Colusa, Del Norte, Glenn, Inyo, Lassen, Mariposa, Modoc, San Benito, Tehama, Tuolumne. These county are in the moderate confidence category for the new decision making framework.]

3. **Counties needing alternative approaches:** [Counties that need alternative approaches are Alpine, Mono, Plumas, Sierra, Trinity because they are in the low confidence category for the new decision making framework.]

## Questions for Further Investigation

[- How has the reliability of ACS estimates changed over time for small counties like Trinity?
- Do neighboring census tracts with high MOEs cluster together spatially?]

# Technical Notes

**Data Sources:** 
- U.S. Census Bureau, American Community Survey 2018-2022 5-Year Estimates
- Retrieved via tidycensus R package on [9.28.25]

**Reproducibility:** 
- All analysis conducted in R version
- Census API key required for replication
- Complete code and documentation available at: [https://musa-5080-fall-2025.github.io/portfolio-setup-yezhanggg/]

**Methodology Notes:**
[Data are selected based on the requirement of the assignment. No major changes to the column names. I picked Los Angeles because it's the largest, Trinity because it had low confidence, Tehama and fall in just right of the moderate confidence level.Analytical Choices can refer back to the full guidance of the assignment.]

**Limitations:**
[This analysis can go a lot deeper if we could compare things on temporal and spatial perspective. To look at more how things have changed and if there's any relationship because of certain census tract are close with each other.]

---

## Submission Checklist

Before submitting your portfolio link on Canvas:

- [ ] All code chunks run without errors
- [ ] All "[Fill this in]" prompts have been completed
- [ ] Tables are properly formatted and readable
- [ ] Executive summary addresses all four required components
- [ ] Portfolio navigation includes this assignment
- [ ] Census API key is properly set 
- [ ] Document renders correctly to HTML

**Remember:** Submit your portfolio URL on Canvas, not the file itself. Your assignment should be accessible at `your-portfolio-url/assignments/assignment_1/your_file_name.html`